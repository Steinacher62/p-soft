<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContextMenuCopy" xml:space="preserve">
    <value>Kopieren</value>
  </data>
  <data name="ContextMenuCut" xml:space="preserve">
    <value>Ausschneiden</value>
  </data>
  <data name="ContextMenuDeleteColumn" xml:space="preserve">
    <value>Spalte löschen</value>
  </data>
  <data name="ContextMenuDeleteRow" xml:space="preserve">
    <value>Zeile löschen</value>
  </data>
  <data name="ContextMenuHideColumn" xml:space="preserve">
    <value>Spalte verdecken</value>
  </data>
  <data name="ContextMenuHideRow" xml:space="preserve">
    <value>Zeile verdecken</value>
  </data>
  <data name="ContextMenuPaste" xml:space="preserve">
    <value>Einfügen</value>
  </data>
  <data name="CustomFormatCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="CustomFormatCurrency" xml:space="preserve">
    <value>Währung</value>
  </data>
  <data name="CustomFormatDateTime" xml:space="preserve">
    <value>Datum Zeit</value>
  </data>
  <data name="CustomFormatNumber" xml:space="preserve">
    <value>Nummer</value>
  </data>
  <data name="CustomFormatSave" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="FilterMenuApply" xml:space="preserve">
    <value>Einsetzen</value>
  </data>
  <data name="FilterMenuClear" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="FilterMenuClearSorting" xml:space="preserve">
    <value>Sortierung entfernen</value>
  </data>
  <data name="FilterMenuDateIs" xml:space="preserve">
    <value>Datum ist</value>
  </data>
  <data name="FilterMenuDateIsAfter" xml:space="preserve">
    <value>Datum ist nach</value>
  </data>
  <data name="FilterMenuDateIsBefore" xml:space="preserve">
    <value>Datum ist vor</value>
  </data>
  <data name="FilterMenuDateIsNot" xml:space="preserve">
    <value>Datum ist nicht</value>
  </data>
  <data name="FilterMenuFilterByCondition" xml:space="preserve">
    <value>Nach Bedingung filtern</value>
  </data>
  <data name="FilterMenuFilterByValue" xml:space="preserve">
    <value>Nach Werten filtern</value>
  </data>
  <data name="FilterMenuIsEqualTo" xml:space="preserve">
    <value>Ist gleich</value>
  </data>
  <data name="FilterMenuIsGreaterThan" xml:space="preserve">
    <value>Ist mehr als</value>
  </data>
  <data name="FilterMenuIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Ist mehr oder gleich</value>
  </data>
  <data name="FilterMenuIsLessThan" xml:space="preserve">
    <value>Ist kleiner als</value>
  </data>
  <data name="FilterMenuIsLessThanOrEqualTo" xml:space="preserve">
    <value>Ist kleiner als oder gleich</value>
  </data>
  <data name="FilterMenuIsNotEqualTo" xml:space="preserve">
    <value>Ist ungleich</value>
  </data>
  <data name="FilterMenuNone" xml:space="preserve">
    <value>Kein</value>
  </data>
  <data name="FilterMenuSortAscending" xml:space="preserve">
    <value>Aufsteigend sortieren</value>
  </data>
  <data name="FilterMenuSortDescending" xml:space="preserve">
    <value>Absteigend sortieren</value>
  </data>
  <data name="FilterMenuTextContains" xml:space="preserve">
    <value>Text enhält</value>
  </data>
  <data name="FilterMenuTextDoesNotContain" xml:space="preserve">
    <value>Text enhält nicht</value>
  </data>
  <data name="FilterMenuTextEndsWith" xml:space="preserve">
    <value>Text endet mit</value>
  </data>
  <data name="FilterMenuTextStartsWith" xml:space="preserve">
    <value>Text beginnt mit</value>
  </data>
  <data name="FormatDialogTitle" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="MessageDialogUseKeyboardOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MessageDialogUseKeyboardText" xml:space="preserve">
    <value>Diese Aktionen können nicht durch das Menü aufgerufen werden. Bitte verwenden Sie Tastenkombinationen anstelle</value>
  </data>
  <data name="MessageDialogUseKeyboardTitle" xml:space="preserve">
    <value>Kopieren und Einfügen</value>
  </data>
  <data name="ReservedResource" xml:space="preserve">
    <value>Please do not remove this key.</value>
  </data>
  <data name="ToolBarAddColumnLeft" xml:space="preserve">
    <value>Spalte links einfügen</value>
  </data>
  <data name="ToolBarAddColumnRight" xml:space="preserve">
    <value>Spalte rechts einfügen</value>
  </data>
  <data name="ToolBarAddRowAbove" xml:space="preserve">
    <value>Zeile oben einfügen</value>
  </data>
  <data name="ToolBarAddRowBelow" xml:space="preserve">
    <value>Zeile unten einfügen</value>
  </data>
  <data name="ToolBarAlignBottom" xml:space="preserve">
    <value>Unten ausrichten</value>
  </data>
  <data name="ToolBarAlignCenter" xml:space="preserve">
    <value>Zentriert ausrichten</value>
  </data>
  <data name="ToolBarAlignJustify" xml:space="preserve">
    <value>Ausrichtigen</value>
  </data>
  <data name="ToolBarAlignLeft" xml:space="preserve">
    <value>Linksbündig ausrichten</value>
  </data>
  <data name="ToolBarAlignMiddle" xml:space="preserve">
    <value>Mitte ausrichten</value>
  </data>
  <data name="ToolBarAlignRight" xml:space="preserve">
    <value>Rechtsbündig ausrichten</value>
  </data>
  <data name="ToolBarAlignTop" xml:space="preserve">
    <value>Oben ausrichten</value>
  </data>
  <data name="ToolBarBackgroundColor" xml:space="preserve">
    <value>Hintergrundfarbe</value>
  </data>
  <data name="ToolBarBold" xml:space="preserve">
    <value>Fett</value>
  </data>
  <data name="ToolBarBorderColor" xml:space="preserve">
    <value>Randfarbe</value>
  </data>
  <data name="ToolBarBordersAll" xml:space="preserve">
    <value>Alle Ränder</value>
  </data>
  <data name="ToolBarBordersBottom" xml:space="preserve">
    <value>Unterer Rand</value>
  </data>
  <data name="ToolBarBordersInside" xml:space="preserve">
    <value>Innerränder</value>
  </data>
  <data name="ToolBarBordersInsideHorizontal" xml:space="preserve">
    <value>Horizontale Innerränder</value>
  </data>
  <data name="ToolBarBordersInsideVertical" xml:space="preserve">
    <value>Vertikale Innerränder</value>
  </data>
  <data name="ToolBarBordersLeft" xml:space="preserve">
    <value>Links Rand</value>
  </data>
  <data name="ToolBarBordersNo" xml:space="preserve">
    <value>Kein Rand</value>
  </data>
  <data name="ToolBarBordersOutside" xml:space="preserve">
    <value>Ausserhalb Ränder</value>
  </data>
  <data name="ToolBarBordersRight" xml:space="preserve">
    <value>Rechter Rand</value>
  </data>
  <data name="ToolBarBordersTop" xml:space="preserve">
    <value>Oberer Rand</value>
  </data>
  <data name="ToolBarCopy" xml:space="preserve">
    <value>Kopieren</value>
  </data>
  <data name="ToolBarCut" xml:space="preserve">
    <value>Ausschneiden</value>
  </data>
  <data name="ToolBarData" xml:space="preserve">
    <value>Daten</value>
  </data>
  <data name="ToolBarDeleteCells" xml:space="preserve">
    <value>Zelle löschen</value>
  </data>
  <data name="ToolBarDeleteColumn" xml:space="preserve">
    <value>Spalte löschen</value>
  </data>
  <data name="ToolBarDeleteRow" xml:space="preserve">
    <value>Zeile löschen</value>
  </data>
  <data name="ToolBarFilter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="ToolBarFontFamily" xml:space="preserve">
    <value>Schriftfamilie</value>
  </data>
  <data name="ToolBarFontSize" xml:space="preserve">
    <value>Schriftgrösse</value>
  </data>
  <data name="ToolBarFormat" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="ToolBarFormatAutomatic" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="ToolBarFormatCurrency" xml:space="preserve">
    <value>Währung</value>
  </data>
  <data name="ToolBarFormatDate" xml:space="preserve">
    <value>Daten</value>
  </data>
  <data name="ToolBarFormatDateTime" xml:space="preserve">
    <value>Datum und Zeit</value>
  </data>
  <data name="ToolBarFormatDecreaseDecimal" xml:space="preserve">
    <value>Dezimalzahl abnehmen</value>
  </data>
  <data name="ToolBarFormatDuration" xml:space="preserve">
    <value>Dauer</value>
  </data>
  <data name="ToolBarFormatFinancial" xml:space="preserve">
    <value>Wirtschaftlich</value>
  </data>
  <data name="ToolBarFormatIncreaseDecimal" xml:space="preserve">
    <value>Dezimalzahl zunehmen</value>
  </data>
  <data name="ToolBarFormatNumber" xml:space="preserve">
    <value>Nummer</value>
  </data>
  <data name="ToolBarFormatPercent" xml:space="preserve">
    <value>Prozent</value>
  </data>
  <data name="ToolBarFormatTime" xml:space="preserve">
    <value>Zeit</value>
  </data>
  <data name="ToolBarFreezeColumns" xml:space="preserve">
    <value>Spalten fixieren</value>
  </data>
  <data name="ToolBarFreezePanes" xml:space="preserve">
    <value>Ausschnitt fixieren</value>
  </data>
  <data name="ToolBarFreezeRows" xml:space="preserve">
    <value>Zeile fixieren</value>
  </data>
  <data name="ToolBarHome" xml:space="preserve">
    <value>Startseite</value>
  </data>
  <data name="ToolBarHorizontalAlignment" xml:space="preserve">
    <value>Horizontal ausrichten</value>
  </data>
  <data name="ToolBarInsert" xml:space="preserve">
    <value>Einfügen</value>
  </data>
  <data name="ToolBarInsertCells" xml:space="preserve">
    <value>Spalten einfügen</value>
  </data>
  <data name="ToolBarItalic" xml:space="preserve">
    <value>Kursiv</value>
  </data>
  <data name="ToolBarMergeCells" xml:space="preserve">
    <value>Zellen verbinden</value>
  </data>
  <data name="ToolBarMergeHorizontally" xml:space="preserve">
    <value>Horizontal verbinden</value>
  </data>
  <data name="ToolBarMergeVertically" xml:space="preserve">
    <value>Vertikal verbinden</value>
  </data>
  <data name="ToolBarMoreFormats" xml:space="preserve">
    <value>Mehr Formatte …</value>
  </data>
  <data name="ToolBarPaste" xml:space="preserve">
    <value>Einfügen</value>
  </data>
  <data name="ToolBarRedo" xml:space="preserve">
    <value>Wiederholen</value>
  </data>
  <data name="ToolBarSave" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="ToolBarSort" xml:space="preserve">
    <value>Sortieren</value>
  </data>
  <data name="ToolBarSortAscending" xml:space="preserve">
    <value>Reihe A bis Z sortieren</value>
  </data>
  <data name="ToolBarSortDescending" xml:space="preserve">
    <value>Reihe Z bis A sortieren</value>
  </data>
  <data name="ToolBarTextColor" xml:space="preserve">
    <value>Textfarbe</value>
  </data>
  <data name="ToolBarTextWrap" xml:space="preserve">
    <value>Text umbrechen</value>
  </data>
  <data name="ToolBarUnderline" xml:space="preserve">
    <value>Unterstreichen</value>
  </data>
  <data name="ToolBarUndo" xml:space="preserve">
    <value>Rückgängig</value>
  </data>
  <data name="ToolBarUnfreeze" xml:space="preserve">
    <value>Ausschnitt nicht fixieren</value>
  </data>
  <data name="ToolBarUnmerge" xml:space="preserve">
    <value>Verbindung aufheben</value>
  </data>
  <data name="ToolBarValidation" xml:space="preserve">
    <value>Datenvalidierung</value>
  </data>
  <data name="ToolBarVerticalAlignment" xml:space="preserve">
    <value>Vertikal ausrichten</value>
  </data>
  <data name="ValidationAny" xml:space="preserve">
    <value>Beliebiger Wert</value>
  </data>
  <data name="ValidationBetween" xml:space="preserve">
    <value>Zwischen</value>
  </data>
  <data name="ValidationCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="ValidationCriteria" xml:space="preserve">
    <value>Kriterien</value>
  </data>
  <data name="ValidationCustomFormula" xml:space="preserve">
    <value>Benutzerdefinierte Formel</value>
  </data>
  <data name="ValidationCustomValueRequired" xml:space="preserve">
    <value>Benutzerdefinierte Wert Erforderlich</value>
  </data>
  <data name="ValidationData" xml:space="preserve">
    <value>Données</value>
  </data>
  <data name="ValidationDate" xml:space="preserve">
    <value>Daten</value>
  </data>
  <data name="ValidationDateMaxRequired" xml:space="preserve">
    <value>Grösste Datum ist erforderlich</value>
  </data>
  <data name="ValidationDateMinRequired" xml:space="preserve">
    <value>Mindestes Datum ist erforderlich</value>
  </data>
  <data name="ValidationDialogTitle" xml:space="preserve">
    <value>Datenvalidierung</value>
  </data>
  <data name="ValidationEqualTo" xml:space="preserve">
    <value>gleich</value>
  </data>
  <data name="ValidationGreaterThan" xml:space="preserve">
    <value>grösser als</value>
  </data>
  <data name="ValidationGreaterThanOrEqualTo" xml:space="preserve">
    <value>grösser als oder gleich</value>
  </data>
  <data name="ValidationHintEmptyMessage" xml:space="preserve">
    <value>Formel ensprechende Wert eingeben:</value>
  </data>
  <data name="ValidationHintMessage" xml:space="preserve">
    <value>Hinweismeldung</value>
  </data>
  <data name="ValidationIgnoreBlank" xml:space="preserve">
    <value>Leer ignorieren</value>
  </data>
  <data name="ValidationLessThan" xml:space="preserve">
    <value>kleiner als</value>
  </data>
  <data name="ValidationLessThanOrEqualTo" xml:space="preserve">
    <value>kleiner oder gleich</value>
  </data>
  <data name="ValidationMax" xml:space="preserve">
    <value>Grösste</value>
  </data>
  <data name="ValidationMin" xml:space="preserve">
    <value>Mindestens</value>
  </data>
  <data name="ValidationNotBetween" xml:space="preserve">
    <value>nicht zwischen</value>
  </data>
  <data name="ValidationNotEqualTo" xml:space="preserve">
    <value>nicht gleich</value>
  </data>
  <data name="ValidationNumber" xml:space="preserve">
    <value>Nummer</value>
  </data>
  <data name="ValidationNumberMaxRequired" xml:space="preserve">
    <value>Grösste Nummer ist erforderlich</value>
  </data>
  <data name="ValidationNumberMinRequired" xml:space="preserve">
    <value>Mindeste Nummer ist erforderlich</value>
  </data>
  <data name="ValidationOnInvalidData" xml:space="preserve">
    <value>Bei ungültigen Daten</value>
  </data>
  <data name="ValidationReject" xml:space="preserve">
    <value>Eingabe ablehnen</value>
  </data>
  <data name="ValidationRemove" xml:space="preserve">
    <value>Validierung entfernen</value>
  </data>
  <data name="ValidationSave" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="ValidationText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ValidationTextValueRequired" xml:space="preserve">
    <value>Wert ist erforderlich</value>
  </data>
  <data name="ValidationValue" xml:space="preserve">
    <value>Wert</value>
  </data>
  <data name="ValidationWarning" xml:space="preserve">
    <value>Warnung zeigen</value>
  </data>
</root>