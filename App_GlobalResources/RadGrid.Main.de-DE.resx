<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewRecordImageUrl" xml:space="preserve">
    <value />
  </data>
  <data name="AddNewRecordText" xml:space="preserve">
    <value>Neuen Eintrag hinzufügen</value>
  </data>
  <data name="Caption" xml:space="preserve">
    <value />
  </data>
  <data name="CollapseTooltip" xml:space="preserve">
    <value>Gruppe zuklappen</value>
  </data>
  <data name="ColumnResizeTooltipFormatString" xml:space="preserve">
    <value>Breite: &lt;strong&gt;{0}&lt;/strong&gt; &lt;em&gt;Pixel&lt;/em&gt;</value>
  </data>
  <data name="DragToGroupOrReorder" xml:space="preserve">
    <value>Ziehen, um zu gruppieren oder neu zu ordnen</value>
  </data>
  <data name="DragToResize" xml:space="preserve">
    <value>Ziehen, um die Größe zu verändern</value>
  </data>
  <data name="DropHereToReorder" xml:space="preserve">
    <value>Hier fallen lassen, um neu zu ordnen</value>
  </data>
  <data name="ExpandTooltip" xml:space="preserve">
    <value>Gruppe aufklappen</value>
  </data>
  <data name="ExportToCsvImageUrl" xml:space="preserve">
    <value />
  </data>
  <data name="ExportToCsvText" xml:space="preserve">
    <value>Als CSV exportieren</value>
  </data>
  <data name="ExportToExcelImageUrl" xml:space="preserve">
    <value />
  </data>
  <data name="ExportToExcelText" xml:space="preserve">
    <value>Als Excel exportieren</value>
  </data>
  <data name="ExportToPdfText" xml:space="preserve">
    <value>Als Pdf exportieren</value>
  </data>
  <data name="ExportToPdfImageUrl" xml:space="preserve">
    <value />
  </data>
  <data name="ExportToWordImageUrl" xml:space="preserve">
    <value />
  </data>
  <data name="ExportToWordText" xml:space="preserve">
    <value>Als Word exportieren</value>
  </data>
  <data name="FilterExpression" xml:space="preserve">
    <value />
  </data>
  <data name="FirstPageText" xml:space="preserve">
    <value />
  </data>
  <data name="FirstPageToolTip" xml:space="preserve">
    <value>Erste Seite</value>
  </data>
  <data name="GroupByFieldsSeparator" xml:space="preserve">
    <value>; </value>
  </data>
  <data name="GroupContinuedFormatString" xml:space="preserve">
    <value>... Gruppe von voriger Seite fortgesetzt. </value>
  </data>
  <data name="GroupContinuesFormatString" xml:space="preserve">
    <value> Gruppe wird auf der nächsten Seite fortgesetzt.</value>
  </data>
  <data name="GroupPanelText" xml:space="preserve">
    <value>Ziehen Sie einen Spaltenkopf hierher, um nach dieser Spalte zu gruppieren.</value>
  </data>
  <data name="GroupSplitDisplayFormat" xml:space="preserve">
    <value>Zeige {0} von {1} Elementen.</value>
  </data>
  <data name="GroupSplitFormat" xml:space="preserve">
    <value> ({0})</value>
  </data>
  <data name="HierarchyCollapseTooltip" xml:space="preserve">
    <value>Zuklappen</value>
  </data>
  <data name="HierarchyExpandTooltip" xml:space="preserve">
    <value>Aufklappen</value>
  </data>
  <data name="HierarchySelfCollapseTooltip" xml:space="preserve">
    <value>Selbstreferenz schließen</value>
  </data>
  <data name="HierarchySelfExpandTooltip" xml:space="preserve">
    <value>Selbstreferenz öffnen</value>
  </data>
  <data name="LastPageText" xml:space="preserve">
    <value />
  </data>
  <data name="LastPageToolTip" xml:space="preserve">
    <value>Letzte Seite</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>Lädt...</value>
  </data>
  <data name="NextPagesToolTip" xml:space="preserve">
    <value>Nächste Seiten</value>
  </data>
  <data name="NextPageText" xml:space="preserve">
    <value />
  </data>
  <data name="NextPageToolTip" xml:space="preserve">
    <value>Nächste Seite</value>
  </data>
  <data name="NoDetailRecordsText" xml:space="preserve">
    <value>Keine Kindelemente vorhanden.</value>
  </data>
  <data name="NoMasterRecordsText" xml:space="preserve">
    <value>Keine Elemente vorhanden.</value>
  </data>
  <data name="PagerTextFormat" xml:space="preserve">
    <value>Wechsle zu Seite: {4} &amp;nbsp;Seite &lt;strong&gt;{0}&lt;/strong&gt; von &lt;strong&gt;{1}&lt;/strong&gt;, Elemente &lt;strong&gt;{2}&lt;/strong&gt; bis &lt;strong&gt;{3}&lt;/strong&gt; von &lt;strong&gt;{5}&lt;/strong&gt;.</value>
  </data>
  <data name="PagerTooltipFormatString" xml:space="preserve">
    <value>Seite &lt;strong&gt;{0}&lt;/strong&gt; von &lt;strong&gt;{1}&lt;/strong&gt;</value>
  </data>
  <data name="PageSizeLabelText" xml:space="preserve">
    <value>Seitengröße:</value>
  </data>
  <data name="PrevPagesToolTip" xml:space="preserve">
    <value>Vorherige Seiten</value>
  </data>
  <data name="PrevPageText" xml:space="preserve">
    <value />
  </data>
  <data name="PrevPageToolTip" xml:space="preserve">
    <value>Vorherige Seite</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="RefreshImageUrl" xml:space="preserve">
    <value />
  </data>
  <data name="ReservedResource" xml:space="preserve">
    <value>Please do not remove this key.</value>
  </data>
  <data name="SortedAscToolTip" xml:space="preserve">
    <value>Aufsteigend sortiert</value>
  </data>
  <data name="SortedDescToolTip" xml:space="preserve">
    <value>Absteigend sortiert</value>
  </data>
  <data name="SortToolTip" xml:space="preserve">
    <value>Zum Sortieren hier klicken</value>
  </data>
  <data name="StatusReadyText" xml:space="preserve">
    <value>Bereit</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value />
  </data>
  <data name="UnGroupButtonTooltip" xml:space="preserve">
    <value>Hier klicken, um die Gruppierung aufzulösen</value>
  </data>
  <data name="UnGroupTooltip" xml:space="preserve">
    <value>Ziehen Sie den Spaltenkopf heraus, um die Gruppierung aufzulösen</value>
  </data>
  <data name="BetweenText" xml:space="preserve">
    <value>Zwischen</value>
  </data>
  <data name="ContainsText" xml:space="preserve">
    <value>Enthält</value>
  </data>
  <data name="CustomText" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="DoesNotContainText" xml:space="preserve">
    <value>Enthält nicht</value>
  </data>
  <data name="EndsWithText" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="EqualToText" xml:space="preserve">
    <value>Gleich</value>
  </data>
  <data name="GreaterThanOrEqualToText" xml:space="preserve">
    <value>Größer oder gleich</value>
  </data>
  <data name="GreaterThanText" xml:space="preserve">
    <value>Größer</value>
  </data>
  <data name="IsEmptyText" xml:space="preserve">
    <value>Ist leer</value>
  </data>
  <data name="IsNullText" xml:space="preserve">
    <value>Ist null</value>
  </data>
  <data name="LessThanOrEqualToText" xml:space="preserve">
    <value>Kleiner oder gleich</value>
  </data>
  <data name="LessThanText" xml:space="preserve">
    <value>Kleiner</value>
  </data>
  <data name="NoFilterText" xml:space="preserve">
    <value>Kein Filter</value>
  </data>
  <data name="NotBetweenText" xml:space="preserve">
    <value>Nicht zwischen</value>
  </data>
  <data name="NotEqualToText" xml:space="preserve">
    <value>Ungleich</value>
  </data>
  <data name="NotIsEmptyText" xml:space="preserve">
    <value>Nicht leer</value>
  </data>
  <data name="NotIsNullText" xml:space="preserve">
    <value>Nicht null</value>
  </data>
  <data name="StartsWithText" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="ChangePageSizeLabelText" xml:space="preserve">
    <value>Seitengröße:</value>
  </data>
  <data name="ChangePageSizeLinkButtonText" xml:space="preserve">
    <value>Ändern</value>
  </data>
  <data name="GoToPageLabelText" xml:space="preserve">
    <value>Seite:</value>
  </data>
  <data name="GoToPageLinkButtonText" xml:space="preserve">
    <value>Gehe zu</value>
  </data>
  <data name="HeaderContextMenuAndLabel" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="HeaderContextMenuClearButton" xml:space="preserve">
    <value>Filter löschen</value>
  </data>
  <data name="HeaderContextMenuColumns" xml:space="preserve">
    <value>Spalten</value>
  </data>
  <data name="HeaderContextMenuFilterButton" xml:space="preserve">
    <value>Filtern</value>
  </data>
  <data name="HeaderContextMenuFilterItemText" xml:space="preserve">
    <value>Filtern</value>
  </data>
  <data name="HeaderContextMenuGroupBy" xml:space="preserve">
    <value>Gruppieren</value>
  </data>
  <data name="HeaderContextMenuRowsLabel" xml:space="preserve">
    <value>Zeige Zeilen mit Werten die</value>
  </data>
  <data name="HeaderContextMenuSortAsc" xml:space="preserve">
    <value>Aufsteigend sortieren</value>
  </data>
  <data name="HeaderContextMenuSortClear" xml:space="preserve">
    <value>Sortierung aufheben</value>
  </data>
  <data name="HeaderContextMenuSortDesc" xml:space="preserve">
    <value>Absteigend sortieren</value>
  </data>
  <data name="HeaderContextMenuUnGroupBy" xml:space="preserve">
    <value>Gruppe auflösen</value>
  </data>
  <data name="PageOfLabelText" xml:space="preserve">
    <value>von {0}</value>
  </data>
  <data name="FilterImageToolTip" xml:space="preserve">
    <value>Filtern</value>
  </data>
  <data name="CloseText" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="HeaderContextMenuBestFitText" xml:space="preserve">
    <value>Automatisch anpassen</value>
  </data>
  <data name="HeaderContextMenuAggregates" xml:space="preserve">
    <value>Gesamtgrößen</value>
  </data>
  <data name="HeaderContextMenuAvgAggregateText" xml:space="preserve">
    <value>Durchschnitt</value>
  </data>
  <data name="HeaderContextMenuCountAggregateText" xml:space="preserve">
    <value>Anzahl</value>
  </data>
  <data name="HeaderContextMenuCountDistinctAggregateText" xml:space="preserve">
    <value>Anzahl Verschiedener</value>
  </data>
  <data name="HeaderContextMenuCustomAggregateText" xml:space="preserve">
    <value>Eigene</value>
  </data>
  <data name="HeaderContextMenuFirstAggregateText" xml:space="preserve">
    <value>Erstes</value>
  </data>
  <data name="HeaderContextMenuLastAggregateText" xml:space="preserve">
    <value>Letztes</value>
  </data>
  <data name="HeaderContextMenuMaxAggregateText" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="HeaderContextMenuMinAggregateText" xml:space="preserve">
    <value>Minimum</value>
  </data>
  <data name="HeaderContextMenuNoneAggregateText" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="HeaderContextMenuSumAggregateText" xml:space="preserve">
    <value>Summe</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="EditText" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="InsertText" xml:space="preserve">
    <value>Einfügen</value>
  </data>
  <data name="UpdateText" xml:space="preserve">
    <value>aktualisieren</value>
  </data>
  <data name="CollapseAllTooltip" xml:space="preserve">
    <value>Allen verbergen</value>
  </data>
  <data name="ExpandAllTooltip" xml:space="preserve">
    <value>Allen erweitern</value>
  </data>
</root>