<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContextMenuCopy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ContextMenuCut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="ContextMenuDeleteColumn" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ContextMenuDeleteRow" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ContextMenuHideColumn" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="ContextMenuHideRow" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="ContextMenuPaste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="CustomFormatCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CustomFormatCurrency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="CustomFormatDateTime" xml:space="preserve">
    <value>Date and Time</value>
  </data>
  <data name="CustomFormatNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="CustomFormatSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="FilterMenuApply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="FilterMenuClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="FilterMenuClearSorting" xml:space="preserve">
    <value>Clear Sorting</value>
  </data>
  <data name="FilterMenuDateIs" xml:space="preserve">
    <value>Date is</value>
  </data>
  <data name="FilterMenuDateIsAfter" xml:space="preserve">
    <value>Date is after</value>
  </data>
  <data name="FilterMenuDateIsBefore" xml:space="preserve">
    <value>Date is before</value>
  </data>
  <data name="FilterMenuDateIsNot" xml:space="preserve">
    <value>Date is not</value>
  </data>
  <data name="FilterMenuFilterByCondition" xml:space="preserve">
    <value>Filter by condition</value>
  </data>
  <data name="FilterMenuFilterByValue" xml:space="preserve">
    <value>Filter by value</value>
  </data>
  <data name="FilterMenuIsEqualTo" xml:space="preserve">
    <value>Is equal to</value>
  </data>
  <data name="FilterMenuIsGreaterThan" xml:space="preserve">
    <value>Is greater than</value>
  </data>
  <data name="FilterMenuIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Is greater than or equal to </value>
  </data>
  <data name="FilterMenuIsLessThan" xml:space="preserve">
    <value>Is less than</value>
  </data>
  <data name="FilterMenuIsLessThanOrEqualTo" xml:space="preserve">
    <value>Is less than or equal to </value>
  </data>
  <data name="FilterMenuIsNotEqualTo" xml:space="preserve">
    <value>Is not equal to </value>
  </data>
  <data name="FilterMenuNone" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="FilterMenuSortAscending" xml:space="preserve">
    <value>Sort Ascending</value>
  </data>
  <data name="FilterMenuSortDescending" xml:space="preserve">
    <value>Sort Descending</value>
  </data>
  <data name="FilterMenuTextContains" xml:space="preserve">
    <value>Text contains</value>
  </data>
  <data name="FilterMenuTextDoesNotContain" xml:space="preserve">
    <value>Text does not contain</value>
  </data>
  <data name="FilterMenuTextEndsWith" xml:space="preserve">
    <value>Text ends with</value>
  </data>
  <data name="FilterMenuTextStartsWith" xml:space="preserve">
    <value>Text starts with</value>
  </data>
  <data name="MessageDialogUseKeyboardOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MessageDialogUseKeyboardText" xml:space="preserve">
    <value>These actions cannot be invoked through the menu. Please use the keyboard shortcuts instead</value>
  </data>
  <data name="MessageDialogUseKeyboardTitle" xml:space="preserve">
    <value>Copying and pasting</value>
  </data>
  <data name="ToolBarAddColumnLeft" xml:space="preserve">
    <value>Add column left</value>
  </data>
  <data name="ToolBarAddColumnRight" xml:space="preserve">
    <value>Add column right</value>
  </data>
  <data name="ToolBarAddRowAbove" xml:space="preserve">
    <value>Add row above</value>
  </data>
  <data name="ToolBarAddRowBelow" xml:space="preserve">
    <value>Add row below</value>
  </data>
  <data name="ToolBarAlignBottom" xml:space="preserve">
    <value>Align Bottom</value>
  </data>
  <data name="ToolBarAlignCenter" xml:space="preserve">
    <value>Align Center</value>
  </data>
  <data name="ToolBarAlignJustify" xml:space="preserve">
    <value>Justify</value>
  </data>
  <data name="ToolBarAlignLeft" xml:space="preserve">
    <value>Align Left</value>
  </data>
  <data name="ToolBarAlignMiddle" xml:space="preserve">
    <value>Align Middle</value>
  </data>
  <data name="ToolBarAlignRight" xml:space="preserve">
    <value>Align Right</value>
  </data>
  <data name="ToolBarAlignTop" xml:space="preserve">
    <value>Align Top</value>
  </data>
  <data name="ToolBarBackgroundColor" xml:space="preserve">
    <value>Background Color</value>
  </data>
  <data name="ToolBarBold" xml:space="preserve">
    <value>Bold</value>
  </data>
  <data name="ToolBarBorderColor" xml:space="preserve">
    <value>Border Color</value>
  </data>
  <data name="ToolBarBordersAll" xml:space="preserve">
    <value>All borders</value>
  </data>
  <data name="ToolBarBordersBottom" xml:space="preserve">
    <value>Bottom border</value>
  </data>
  <data name="ToolBarBordersInside" xml:space="preserve">
    <value>Inside borders</value>
  </data>
  <data name="ToolBarBordersInsideHorizontal" xml:space="preserve">
    <value>Inside horizontal borders</value>
  </data>
  <data name="ToolBarBordersInsideVertical" xml:space="preserve">
    <value>Inside vertical borders</value>
  </data>
  <data name="ToolBarBordersLeft" xml:space="preserve">
    <value>Left border</value>
  </data>
  <data name="ToolBarBordersNo" xml:space="preserve">
    <value>No border</value>
  </data>
  <data name="ToolBarBordersOutside" xml:space="preserve">
    <value>Outside borders</value>
  </data>
  <data name="ToolBarBordersRight" xml:space="preserve">
    <value>Right border</value>
  </data>
  <data name="ToolBarBordersTop" xml:space="preserve">
    <value>Top border</value>
  </data>
  <data name="ToolBarCopy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ToolBarCut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="ToolBarData" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="ToolBarDeleteCells" xml:space="preserve">
    <value>Delete cells</value>
  </data>
  <data name="ToolBarDeleteColumn" xml:space="preserve">
    <value>Delete column</value>
  </data>
  <data name="ToolBarDeleteRow" xml:space="preserve">
    <value>Delete row</value>
  </data>
  <data name="ToolBarFilter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="ToolBarFontFamily" xml:space="preserve">
    <value>Font Family</value>
  </data>
  <data name="ToolBarFontSize" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="ToolBarFormat" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="ToolBarFormatAutomatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="ToolBarFormatCurrency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="ToolBarFormatDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="ToolBarFormatDateTime" xml:space="preserve">
    <value>Date time</value>
  </data>
  <data name="ToolBarFormatDecreaseDecimal" xml:space="preserve">
    <value>Decrease decimal</value>
  </data>
  <data name="ToolBarFormatDuration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="ToolBarFormatFinancial" xml:space="preserve">
    <value>Financial</value>
  </data>
  <data name="ToolBarFormatIncreaseDecimal" xml:space="preserve">
    <value>Increase decimal</value>
  </data>
  <data name="ToolBarFormatNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ToolBarFormatPercent" xml:space="preserve">
    <value>Percent</value>
  </data>
  <data name="ToolBarFormatTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ToolBarFreezeColumns" xml:space="preserve">
    <value>Freeze columns</value>
  </data>
  <data name="ToolBarFreezePanes" xml:space="preserve">
    <value>Freeze panes</value>
  </data>
  <data name="ToolBarFreezeRows" xml:space="preserve">
    <value>Freeze rows</value>
  </data>
  <data name="ToolBarHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ToolBarHorizontalAlignment" xml:space="preserve">
    <value>Horizontal alignment</value>
  </data>
  <data name="ToolBarInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="ToolBarInsertCells" xml:space="preserve">
    <value>Insert cells</value>
  </data>
  <data name="ToolBarItalic" xml:space="preserve">
    <value>Italic</value>
  </data>
  <data name="ToolBarMergeCells" xml:space="preserve">
    <value>Merge Cells</value>
  </data>
  <data name="ToolBarMergeHorizontally" xml:space="preserve">
    <value>Merge Horizontally</value>
  </data>
  <data name="ToolBarMergeVertically" xml:space="preserve">
    <value>Merge Vertically</value>
  </data>
  <data name="ToolBarMoreFormats" xml:space="preserve">
    <value>More formats...</value>
  </data>
  <data name="ToolBarPaste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="ToolBarRedo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="ToolBarSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ToolBarSort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="ToolBarSortAscending" xml:space="preserve">
    <value>Sort range A to Z</value>
  </data>
  <data name="ToolBarSortDescending" xml:space="preserve">
    <value>Sort range Z to A</value>
  </data>
  <data name="ToolBarTextColor" xml:space="preserve">
    <value>Text Color</value>
  </data>
  <data name="ToolBarTextWrap" xml:space="preserve">
    <value>Wrap text</value>
  </data>
  <data name="ToolBarUnderline" xml:space="preserve">
    <value>Underline</value>
  </data>
  <data name="ToolBarUndo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="ToolBarUnfreeze" xml:space="preserve">
    <value>Unfreeze panes</value>
  </data>
  <data name="ToolBarUnmerge" xml:space="preserve">
    <value>Unmerge</value>
  </data>
  <data name="ToolBarValidation" xml:space="preserve">
    <value>Data Validation</value>
  </data>
  <data name="ToolBarVerticalAlignment" xml:space="preserve">
    <value>Vertical alignment</value>
  </data>
  <data name="ValidationAny" xml:space="preserve">
    <value>AnyValue</value>
  </data>
  <data name="ValidationBetween" xml:space="preserve">
    <value>between</value>
  </data>
  <data name="ValidationCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ValidationCriteria" xml:space="preserve">
    <value>Criteria</value>
  </data>
  <data name="ValidationCustomFormula" xml:space="preserve">
    <value>Custom Formula</value>
  </data>
  <data name="ValidationCustomValueRequired" xml:space="preserve">
    <value>Value is required</value>
  </data>
  <data name="ValidationData" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="ValidationDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="ValidationDateMaxRequired" xml:space="preserve">
    <value>Max date is required</value>
  </data>
  <data name="ValidationDateMinRequired" xml:space="preserve">
    <value>Min date is required</value>
  </data>
  <data name="ValidationEqualTo" xml:space="preserve">
    <value>equal to</value>
  </data>
  <data name="ValidationGreaterThan" xml:space="preserve">
    <value>greater than</value>
  </data>
  <data name="ValidationGreaterThanOrEqualTo" xml:space="preserve">
    <value>greater than or equal to</value>
  </data>
  <data name="ValidationHintEmptyMessage" xml:space="preserve">
    <value>Enter a value that satisfies the formula:</value>
  </data>
  <data name="ValidationHintMessage" xml:space="preserve">
    <value>Hint Message</value>
  </data>
  <data name="ValidationIgnoreBlank" xml:space="preserve">
    <value>Ignore Blank</value>
  </data>
  <data name="ValidationLessThan" xml:space="preserve">
    <value>less than</value>
  </data>
  <data name="ValidationLessThanOrEqualTo" xml:space="preserve">
    <value>less than or equal to</value>
  </data>
  <data name="ValidationMax" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="ValidationMin" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="ValidationNotBetween" xml:space="preserve">
    <value>not between</value>
  </data>
  <data name="ValidationNotEqualTo" xml:space="preserve">
    <value>not equal to</value>
  </data>
  <data name="ValidationNumber" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ValidationNumberMaxRequired" xml:space="preserve">
    <value>Max number is required</value>
  </data>
  <data name="ValidationNumberMinRequired" xml:space="preserve">
    <value>Min number is required</value>
  </data>
  <data name="ValidationOnInvalidData" xml:space="preserve">
    <value>On invalid data</value>
  </data>
  <data name="ValidationReject" xml:space="preserve">
    <value>Reject input</value>
  </data>
  <data name="ValidationRemove" xml:space="preserve">
    <value>Remove validation</value>
  </data>
  <data name="ValidationSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ValidationText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ValidationTextValueRequired" xml:space="preserve">
    <value>Value is required</value>
  </data>
  <data name="ValidationValue" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ValidationWarning" xml:space="preserve">
    <value>Show warning</value>
  </data>
</root>